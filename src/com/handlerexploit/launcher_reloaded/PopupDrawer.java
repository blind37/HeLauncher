/*
 * Copyright (C) 2010, HandlerExploit
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.handlerexploit.launcher_reloaded;

import android.view.View;
import android.widget.PopupWindow;

public class PopupDrawer extends PopupWindow {
	Launcher mLauncher;
	
	/*
	 * 
	 * The current way that the app drawer works is we use the PopupWindow because it gives us the ability to control
	 * which animations we are going to use for fading in and out. The PopupWindow causes us some problems because
	 * we cannot override onBackPressed so we cant back out of it using the back button. It also causes problems
	 * when we are doing a onItemLongClick to drop a shortcut to the workspace, it wont let us add it directly to
	 * the current view parent so it cant handle the transition correctly. When I can find a better method that still
	 * allows us to control the animations with as much flexibility as the PopupWindow does I will switch over to it.
	 * 
	 */
	
	public void onBackPressed() {
		mLauncher = new Launcher();
		mLauncher.windowDismiss();
	} // This method does nothing

	public PopupDrawer(View contentView, int width, int height, boolean focusable) {
		super(contentView, width, height, focusable);
	}
}