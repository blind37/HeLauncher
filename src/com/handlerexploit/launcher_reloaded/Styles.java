/* 
 * This program is free software. It comes without any warranty, to
 * the extent permitted by applicable law. You can redistribute it
 * and/or modify it under the terms of the Do What The Fuck You Want
 * To Public License, Version 2, as published by Sam Hocevar. See
 * http://sam.zoy.org/wtfpl/COPYING for more details.
 */

package com.handlerexploit.launcher_reloaded;

import java.io.IOException;

import android.app.Activity;
import android.app.Dialog;
import android.app.ProgressDialog;
import android.app.WallpaperManager;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.os.Bundle;
import android.os.Handler;
import android.view.GestureDetector;
import android.view.GestureDetector.OnDoubleTapListener;
import android.view.GestureDetector.OnGestureListener;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.Window;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemLongClickListener;
import android.widget.Button;
import android.widget.Gallery;
import android.widget.ImageView;
import android.widget.TextView;

public class Styles extends Activity implements OnDoubleTapListener, OnGestureListener {
	private SharedPreferences sharedPref;
	private Gallery mGallery;
	private WallpaperManager mWallpaperManager;
	private GestureDetector gesturedetector = null;
	private ProgressDialog mProgressDialog;

    @Override
    public void onCreate(Bundle icicle) {
        super.onCreate(icicle);
        setContentView(R.layout.styles_main);
                
        mProgressDialog = new ProgressDialog(this);
        mProgressDialog.setMessage("Please wait...");
        
        sharedPref = getSharedPreferences(Launcher.STYLE_PREF, 0);
        
        gesturedetector = new GestureDetector(this, this);
        gesturedetector.setOnDoubleTapListener(this);
        
        mGallery = (Gallery) findViewById(R.id.gallery);
        mGallery.setAdapter(new StylesAdapter(this));
        mGallery.setSelection(sharedPref.getInt(Launcher.PREFERENCE_STYLE, 0));
        mGallery.setOnItemLongClickListener(new OnItemLongClickListener() {
			public boolean onItemLongClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
				exit();
				return true;
			}
        });
        
        Button button = (Button)findViewById(R.id.apply);
        button.setOnClickListener(new OnClickListener() { 
        	public void onClick(View v) { 
        		exit(); 
        	} 
        });
        
    	ImageView preferences = (ImageView) findViewById(R.id.preferences);
    	preferences.setOnClickListener(new OnClickListener() {
            public void onClick(View v) {
            	Intent i = new Intent(v.getContext(), Preferences.class);
            	v.getContext().startActivity(i);
            }
        });
    	
    	ImageView help_about = (ImageView) findViewById(R.id.help_about);
    	help_about.setOnClickListener(new OnClickListener() {
            public void onClick(View v) {
            	helpScreen(v).show();
            }
        });
    }
    
    private Dialog helpScreen(View v) {
    	Dialog d = new Dialog(v.getContext());
    	d.requestWindowFeature(Window.FEATURE_LEFT_ICON);
    	d.setContentView(R.layout.help_about);
    	d.setTitle("About | Help | F.A.Q.");
    	d.setFeatureDrawableResource(Window.FEATURE_LEFT_ICON, R.drawable.ic_menu_help_normal);

    	TextView text = (TextView) d.findViewById(R.id.text);
    	text.setText("Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.");
    	
    	return d;
    }
    
    private void wallpaperEditor(int wallpaper, int preferenceValue) { // Multi-tasking at its best
    	Editor editor = sharedPref.edit();
    	mWallpaperManager = WallpaperManager.getInstance(this);
        try {
        	if (Preferences.getWallpaperChange())
        		mWallpaperManager.setResource(wallpaper);
		} catch (IOException e) {}
		
    	editor.putInt(Launcher.PREFERENCE_STYLE , preferenceValue);
    	editor.commit();
    }
    
    private void exit() {
        int selectedPos = mGallery.getSelectedItemPosition();
        switch (selectedPos) {
        case 0:
        	wallpaperEditor(R.drawable.htc_wallpaper_14, 0);
        	break;
        case 1:
        	wallpaperEditor(R.drawable.htc_wallpaper_02, 1);
        	break;
        case 2:
        	wallpaperEditor(R.drawable.htc_wallpaper_01, 2);
        	break;
        case 3:
        	wallpaperEditor(R.drawable.htc_wallpaper_17, 3);
        	break;
        case 4:
        	wallpaperEditor(R.drawable.htc_wallpaper_06, 4);
        	break;
        case 5:
        	wallpaperEditor(R.drawable.htc_wallpaper_19, 5);
        	break;
        case 6:
        	wallpaperEditor(R.drawable.htc_wallpaper_10, 6);
        	break;
        case 7:
        	wallpaperEditor(R.drawable.htc_wallpaper_07, 7);
        	break;
        case 8:
        	wallpaperEditor(R.drawable.htc_wallpaper_12, 8);
        	break;
        }
        mProgressDialog.show();
        new Handler().postDelayed(
        		new Runnable() {
        			@Override public void run() {
        				mProgressDialog.dismiss();
        				Styles.this.finish();
        				}
        			}, 550);
        /*
         * Generally, 100 to 200ms is the threshold beyond which users will perceive lag in an application.
         */
    }
    
    @Override
    public boolean onTouchEvent(MotionEvent event) {
            return gesturedetector.onTouchEvent(event);
    }

	@Override
	public boolean onDoubleTap(MotionEvent e) {
		exit();
		return false;
	}
	
	/* Land of the forgotten classes */
	
	public boolean onDoubleTapEvent(MotionEvent e) {return false;}
	public boolean onSingleTapConfirmed(MotionEvent e) {return false;}
	public boolean onDown(MotionEvent e) {return false;}
	public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {return false;}
	public void onLongPress(MotionEvent e) {}
	public boolean onScroll(MotionEvent e1, MotionEvent e2, float distanceX, float distanceY) {return false;}
	public void onShowPress(MotionEvent e) {}
	public boolean onSingleTapUp(MotionEvent e) {return false;}
}