/* 
 * This program is free software. It comes without any warranty, to
 * the extent permitted by applicable law. You can redistribute it
 * and/or modify it under the terms of the Do What The Fuck You Want
 * To Public License, Version 2, as published by Sam Hocevar. See
 * http://sam.zoy.org/wtfpl/COPYING for more details.
 */

package com.handlerexploit.launcher_reloaded;

import java.io.IOException;

import android.app.Activity;
import android.app.WallpaperManager;
import android.content.SharedPreferences.Editor;
import android.os.Bundle;
import android.view.GestureDetector;
import android.view.GestureDetector.OnDoubleTapListener;
import android.view.GestureDetector.OnGestureListener;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemLongClickListener;
import android.widget.Button;
import android.widget.Gallery;

public class Styles extends Activity implements OnDoubleTapListener, OnGestureListener {
	private Gallery mGallery;
	private WallpaperManager mWallpaperManager;
	private GestureDetector gesturedetector = null;

    @Override
    public void onCreate(Bundle icicle) {
        super.onCreate(icicle);
        setContentView(R.layout.styles_main);
        
        gesturedetector = new GestureDetector(this, this);
        gesturedetector.setOnDoubleTapListener(this);
        
        mGallery = (Gallery) findViewById(R.id.gallery);
        mGallery.setAdapter(new StylesAdapter(this));
        mGallery.setOnItemLongClickListener(new OnItemLongClickListener() {
			@Override
			public boolean onItemLongClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
				exit();
				return false;
			}
        });
        
        Button button = (Button)findViewById(R.id.apply);
        button.setOnClickListener(new OnClickListener() {
        	@Override
            public void onClick(View v) {
            	exit();
            }
        });
    }
    
    private void wallpaperEditor(int wallpaper, int preferenceValue) { // Multi-tasking at its best
    	Editor editor = Styles.this.getSharedPreferences(Launcher.STYLE_PREF, 0).edit();
    	mWallpaperManager = WallpaperManager.getInstance(this);
    	        
        try {
			mWallpaperManager.setResource(wallpaper);
		} catch (IOException e) {}
		
    	editor.putInt(Launcher.PREFERENCE_STYLE , preferenceValue);
    	editor.commit();
    }
    
    private void exit() {
        int selectedPos = mGallery.getSelectedItemPosition();
        switch (selectedPos) {
        case 0:
        	wallpaperEditor(R.drawable.htc_wallpaper_14, 0);
        	break;
        case 1:
        	wallpaperEditor(R.drawable.htc_wallpaper_02, 1);
        	break;
        case 2:
        	wallpaperEditor(R.drawable.htc_wallpaper_01, 2);
        	break;
        case 3:
        	wallpaperEditor(R.drawable.htc_wallpaper_10, 3);
        	break;
        case 4:
        	wallpaperEditor(R.drawable.htc_wallpaper_07, 4);
        	break;
        case 5:
        	wallpaperEditor(R.drawable.htc_wallpaper_12, 5);
        	break;
        }
        finish();
    }
    
    @Override
    public boolean onTouchEvent(MotionEvent event) {
            return gesturedetector.onTouchEvent(event);
    }

	@Override
	public boolean onDoubleTap(MotionEvent e) {
		exit();
		return false;
	}
	
	/* Land of the forgotten classes */
	
	public boolean onDoubleTapEvent(MotionEvent e) {return false;}
	public boolean onSingleTapConfirmed(MotionEvent e) {return false;}
	public boolean onDown(MotionEvent e) {return false;}
	public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {return false;}
	public void onLongPress(MotionEvent e) {}
	public boolean onScroll(MotionEvent e1, MotionEvent e2, float distanceX, float distanceY) {return false;}
	public void onShowPress(MotionEvent e) {}
	public boolean onSingleTapUp(MotionEvent e) {return false;}
}